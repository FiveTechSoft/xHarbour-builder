name: xHarbour for Windows 32 using BCC

on:
  push:    
  watch:
   types: [started]

jobs:
  build:
    runs-on: windows-latest
    
    if: github.actor == github.event.repository.owner.login
    
    steps:

    - name: Install dependencies
      run: |
         (new-object System.Net.WebClient).DownloadFile('https://bitbucket.org/lorenzodla/mod_harbour_actions_resources/downloads/OpenSSL-Win32.zip', 'C:\temp\OpenSSL-Win32.zip')
         Expand-Archive -LiteralPath C:\temp\OpenSSL-Win32.zip -DestinationPath C:\OpenSSL -Force
         (new-object System.Net.WebClient).DownloadFile('https://bitbucket.org/lorenzodla/mod_harbour_actions_resources/downloads/curl-7.54.0-win32-mingw.zip', 'C:\temp\curl-7.54.0-win32-mingw.zip')
         Expand-Archive -LiteralPath C:\temp\curl-7.54.0-win32-mingw.zip -DestinationPath C:\curl -Force        
         (new-object System.Net.WebClient).DownloadFile('https://github.com/FiveTechSoft/Harbour_builder/raw/master/.github/temp/bcc70.zip', 'C:\temp\bcc70.zip')
         Expand-Archive -LiteralPath C:\temp\bcc70.zip -DestinationPath C:\bcc7 -Force
         (new-object System.Net.WebClient).DownloadFile('https://bitbucket.org/lorenzodla/mod_harbour_actions_resources/downloads/acesdk.zip', 'C:\temp\acesdk.zip')
         Expand-Archive -LiteralPath C:\temp\acesdk.zip -DestinationPath C:\acesdk -Force
         svn co https://svn.code.sf.net/p/xharbour/code/trunk/xharbour c:\xharbour
         (Get-Content -path c:\xharbour\make_bc.bat) -replace 'notepad','echo' | Set-Content -path c:\xharbour\make_bc.bat
         
    - name: Compile xHarbour
      shell: cmd
      run: |
        set path=c:\bcc7\bin;%path%
        cd c:\xharbour
        c:\xharbour\make_bc.bat
        
    - name: Create output folders
      shell: cmd
      run: |
        mkdir output
        mkdir output\bin
        copy xharbour\bin\win\bcc\*.exe output\bin
        mkdir output\lib
        copy xharbour\lib\win\bcc\*.lib output\lib
        mkdir output\include 
        copy xharbour\include output\include
        
    - name: Get current time
      uses: srfrnk/current-time@master
      id: current-time
      with:
        format: YYYY_MM_DD
 
    - name: Upload xHarbour to artifact
      env:
         TIME: "${{ steps.current-time.outputs.formattedTime }}"
      uses: actions/upload-artifact@v2
      with:
       name: xharbour_win32_bcc_${{ env.TIME }}
       path: output
